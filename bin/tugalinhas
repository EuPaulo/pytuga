#!/usr/bin/python3
import sys
import os
from tugalinhas import util


def setup_devel():
    # Change current dir to where this file lives
    filepath = os.path.realpath(__file__)
    filedir, _ = os.path.split(filepath)
    os.chdir(filedir)

    # Use the tugalinhas lib here in the src folder.
    # For development, or running from the source
    #   folder instead of a proper install.
    sys.path.insert(0, 'src')


try:
    from tugalinhas import main
except ImportError:
    setup_devel()

    try:
        from tugalinhas import main
    except ImportError:
        print('Unable to locate the tugalinhas libraries.')
        print('Check your installation.')
        main = False


if main:
    if '-D' in sys.argv:
        main.setup_logging()

    if util.__file__.startswith('/usr/local') and sys.prefix == '/usr':
        print()
        print('If this is a Debian or Ubuntu system,')
        print('You may have forgotten to pass')
        print('--install-layout=deb')
        print('when installing.')


def help():
    from tugalinhas import conf
    print(conf.version)
    print()
    print('options:')
    print('  -h : this help text')
    print('  -d : development mode. Run from local directory')
    print('  -D : debug mode. Write debug info to log file')
    print(' DUMP <filename> :')
    print('       dump contents of tugalinhas file to standard output')
    print('  -T : run test suite')
    print('  -d MAKEDEB : create debian package')


pynfile = sys.argv[-1]
if not pynfile.endswith('.pyn'):
    pynfile = False


def run_tests():
    if '-d' not in sys.argv:
        sys.argv.append('-d')
        setup_devel()

    sys.argv = []

    import pytest
    pytest.main(['-v'])


if '-h' in sys.argv:
    help()
elif main and 'DUMP' in sys.argv:
    main.dumpfile()
elif '-T' in sys.argv:
    run_tests()
elif main and pynfile:
    main.run(pynfile)
elif main:
    main.run()
else:
    input()
